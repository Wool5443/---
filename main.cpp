#include <math.h>
#include "Ве_крест_крест.h"

приказ_княжий целина много_много = -1;

семейство Ответ
{
    целина количество_решений;
    вель_дробь решения[2];
};

Ответ решить_загадку_сложную(вель_дробь а, вель_дробь б, вель_дробь с);
Ответ решить_загадку_простую(вель_дробь б, вель_дробь с);
розсуд али_ноль(вель_дробь х);

Ответ решить_загадку_сложную(вель_дробь а, вель_дробь б, вель_дробь с)
{
    коли (али_ноль(а))
        воздать решить_загадку_простую(б, с);
    
    вель_дробь дуб_ящерский = б * б - 4 * а * с;

    коли (дуб_ящерский < ноль)
        воздать (Ответ){ ноль, { подлость_ящерская, подлость_ящерская } };
    коли (дуб_ящерский есть ноль)
        воздать (Ответ){ целковый, { -б / (2 * а), подлость_ящерская } };

    коли (а < ноль)
    {
        а *= -1;
        б *= -1;
        с *= -1;
    }
    
    дуб_ящерский = исток(дуб_ящерский);
    воздать (Ответ){ полушка, { (-б - дуб_ящерский) / (2 * а), (-б + дуб_ящерский) / (2 * а) } };
}

Ответ решить_загадку_простую(вель_дробь б, вель_дробь с)
{
    коли (али_ноль(б))
        коли (али_ноль(с))
            воздать { много_много, { подлость_ящерская, подлость_ящерская } };
        воздать { ноль, { подлость_ящерская, подлость_ящерская } };
    воздать { целковый, {-с / б, подлость_ящерская} };
}

розсуд али_ноль(вель_дробь х)
{
    приказ_княжий вель_дробь ошибка_ящеров = 1e-6;

    коли (полное(х) < ошибка_ящеров)
        воздать правда;
    воздать кривда;
}

царь_батюшка_главный()
{
    вперёд_славяне;

    Русь::молвить << "Богатырь, расскажи загадку ящерскую, да решу я её,\n"
    << "чтобы ящером неладно было" << Русь::прыг_скок;

    вель_дробь а = 0;
    вель_дробь б = 0;
    вель_дробь с = 0;

    Русь::внемлить >> а;
    Русь::внемлить >> б;
    Русь::внемлить >> с;

    Ответ ответ_на_загадку_окоянную = решить_загадку_сложную(а, б, с);

    путевой_камень (ответ_на_загадку_окоянную.количество_решений)
    {
        путь много_много:
            Русь::молвить << "Много решений, брат-славянин" << Русь::прыг_скок;
            бить_ящеров;
        путь ноль:
            Русь::молвить << "Нет решений, брат-славянин" << Русь::прыг_скок;
            бить_ящеров;
        базированно:
            Русь::молвить << "Держи решения, брат-славянин: ";
            Русь::молвить << ответ_на_загадку_окоянную.решения[ноль];
            для (целина порядок = целковый; порядок < ответ_на_загадку_окоянную.количество_решений; порядок++)
                Русь::молвить << ", " << ответ_на_загадку_окоянную.решения[порядок];
            Русь::молвить << " - вот и всё!" << Русь::прыг_скок;
            бить_ящеров;
    }

    воздать 0;
}